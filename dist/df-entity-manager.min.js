angular.module("df.entityManagerBundle",["ng","df.validatorBundle"]).config(function(){}).run(function(){}),angular.module("df.entityManagerBundle").factory("BaseEntity",[function(){function t(){this.$construct(arguments[0]||null)}return t.prototype={$construct:function(t){return t&&angular.extend(this,t),this},$getId:function(){var t=this.id||this._id;return angular.isObject(t)?t.$oid:t}},t.repository="BaseEntityRepository",t.getValidationSchema=function(){return this.schema||{}},t.extend=function(t){var e=this;return angular.extend(t,e),t.prototype=t.prototype?angular.copy(t.prototype,new e):new e,t},t}]),angular.module("df.entityManagerBundle").factory("BaseEntityManager",["$http","$q","$injector","dataTransformer",function(t,e,n,r){function a(){this.settings={endpointURL:"",httpOptions:{}},this.repositories=[]}return a.prototype={$setEndpoint:function(t){return this.settings.endpointURL=t,this},$getEndpoint:function(){return this.settings.endpointURL},$getHttpOptions:function(){return angular.copy(this.settings.httpOptions)},$setHttpOptions:function(t){return this.settings.httpOptions=t,this},$addHeader:function(t,e){return this.settings.httpOptions.headers=this.settings.httpOptions.headers||{},this.settings.httpOptions.headers[t]=e,this},$getSettings:function(){return angular.copy(this.settings)},$getDefaultEntityName:function(){return"BaseEntity"},$getRepository:function(t,e){var r=angular.isString(t)?n.get(t):t,a=angular.isFunction(r)?new r:r;if(!a)throw"RepositoryNotFoundException";if(!angular.isFunction(a.$setEntityManager||a.$$setEntityType))throw"NotValidRepositoryException";return a.$$setEntityType(null,e),a.$setEntityManager(this),a},$getRepositoryByEntity:function(t,e){var r=n.get(this.$getDefaultEntityName());try{r=angular.isString(t)?n.get(t):t}catch(a){r=n.get(this.$getDefaultEntityName())}var i=angular.isFunction(r)?r.repository:r.constructor.repository,o=this.$getRepository(i);if(!angular.isFunction(o.$setEntityManager||o.$$setEntityType))throw"NotValidRepositoryException";return o.$$setEntityType(r,e||t),o},$get:function(t){return t=t||{},t.method="GET",this.$$callRemote(t)},$delete:function(t){return t=t||{},t.method="DELETE",this.$$callRemote(t)},$post:function(t){return t=t||{},t.method="POST",t.data=t.data||{},this.$$callRemote(t)},$put:function(t){if(t=t||{},t.method="PUT",angular.isUndefined(t.data))throw"Data should be defined";return this.$$callRemote(t)},$patch:function(t){if(t=t||{},t.method="PATCH",angular.isUndefined(t.data))throw"Data should be defined";return this.$$callRemote(t)},$$callRemote:function(n){if(n=angular.extend(this.$getHttpOptions(),n),!n.url)throw"Url should be defined";n.url=this.$getEndpoint()+this.$getUrl(n);var a=e.defer(),i=this;return n.requestTransformer&&(n.data=r.$chainReverseTransform(n.requestTransformer,n.data)),t(n).then(function(t){var e=i.$$parseResponse(t,n);n.responseTransformer&&(e=r.$chainTransform(n.responseTransformer,e)),a.resolve(e)}).catch(function(t){a.reject(t)}),a.promise},$$applyCriteria:function(t){return t.criteria&&angular.forEach(t.criteria,function(e,n){t.url=t.url+"&"+n+"="+JSON.stringify(e)}),t},$getUrl:function(t){return t.url},$$parseResponse:function(t){return t.data}},a.extend=function(t){var e=this;return angular.extend(t,e),t.prototype=t.prototype?angular.copy(t.prototype,new e):new e,t},a}]),angular.module("df.entityManagerBundle").factory("BaseEntityRepository",["$q","BaseEntity","$parse",function(t,e,n){function r(){this.$$entityType=e,this.$$entityManager=null}return r.prototype={$getEntityType:function(){return this.$$entityType},$$setEntityType:function(t,n){return this.$$entityType=t||this.$$entityType||e,this.$$entityName=n||this.$$entityName||(t?t.constructor.name:void 0),this},$setEntityManager:function(t){return this.$$entityManager=t,this},$getEntityManager:function(){return this.$$entityManager},$getEM:function(){return this.$getEntityManager()},$create:function(t){var e=this.$getEntityType();return new e(t)},$save:function(e,n){n=n||{};var r=t.defer(),a=e.$getId()?"$put":"$post";return n.data=e,n.url=n.url||this.$$getEntityUrl(e.$getId(),n),this.$getEntityManager()[a](n).then(function(t){r.resolve(t)}).catch(function(t){r.reject(t)}),r.promise},$remove:function(e,n){n=n||{};var r=t.defer(),a=[];angular.isArray(e)?a=e:a.push(e);var i=this,o=a.length,s={success:[],errors:[]},u=this.$create().$getId;return angular.forEach(a,function(t){var e=t.$getId()||u.apply(t);if(!e)return o--,void 0;var a=angular.copy(n);a.url=i.$$getEntityUrl(e,a),i.$getEntityManager().$delete(a).then(function(){s.success.push(t)}).catch(function(){s.errors.push(t)}).finally(function(){o--,0===o&&r.resolve(s)})}),r.promise},$find:function(e,n){n=n||{};var r=t.defer(),a=this;return n.url=this.$$getEntityUrl(e,n),this.$getEntityManager().$get(n).then(function(t){var e,i=a.$$parseResponse(1===t.length?t[0]:t,n);try{e=a.$create(i)}catch(o){r.reject("Not valid response type")}r.resolve(e)},r.reject),r.promise},$findOrCreate:function(e,n){var r=this,a=t.defer();return"new"===e?a.resolve(r.$create({})):this.$find(e,n).then(function(t){a.resolve(t)}).catch(function(){a.resolve(r.$create({}))}),a.promise},$findBy:function(e,n){n=n||{},n.criteria=e||{};var r=t.defer(),a=this;return n.url=this.$$getEntityUrl(null,n),this.$getEntityManager().$get(n).then(function(t){var e=a.$$parseResponse(t,n);if(angular.isArray(e)){var i=[];angular.forEach(e,function(t){var e;try{e=a.$create(t)}catch(n){r.reject("Not valid response type")}i.push(e)}),r.resolve(i)}else r.reject("Not a valid response, expecting an array")},r.reject),r.promise},$findOneBy:function(e,n){n=n||{},n.criteria=e||{};var r=t.defer(),a=this;return n.criteria.l=1,this.$findBy(e,n).then(function(t){r.resolve(a.$create(t[0]))}).catch(function(){r.reject(arguments)}),r.promise},$$parseResponse:function(t,e){return e=e||{},t},$$getEntityUrl:function(t,e){e=e||{};var n="/"+this.$$entityName;return t?n+"/"+t:n},$parseUrl:function(t,e){throw"Not well implemented"}},r.extend=function(t){var e=this;return angular.extend(t,e),t.prototype=t.prototype?angular.copy(t.prototype,new e):new e,t},r}]),angular.module("df.entityManagerBundle").filter("transform",function(t){return function(e,n){return t.$transform(n,e)}}).filter("convertTo",function(t){return function(e,n){try{var r=t.get(n);return r instanceof Function?new r(e):r instanceof Object?angular.extend({},e,r):e}catch(a){return e}}}),angular.module("df.entityManagerBundle").service("cacheIt",function(t){function e(){}return e.prototype={$$getTagStorage:function(e){try{return t.get("cacheIt-tag-"+e)||t("cacheIt-tag-"+e)}catch(n){return t("cacheIt-tag-"+e)}},$invalidate:function(t,e){var n=this.$$getTagStorage(t);e?n.remove(e):n.destroy()},$get:function(t,e){return this.$$getTagStorage(t).get(e)},$set:function(t,e,n){var r=this.$$getTagStorage(t);return r.put(e,n)},$has:function(t,e){return void 0!==this.$get(t,e)}},new e}),angular.module("df.entityManagerBundle").service("dataTransformer",function(t){function e(){}var n={};return e.prototype={$add:function(t,e){return n[t]=e,this},$get:function(e){var r=n[e];if(angular.isString(r))try{r=t.get(r)}catch(a){throw a}return r},$has:function(t){return void 0!==n[t]},$remove:function(t){return delete n[t],this},$transform:function(t,e){if(!this.$has(t))return e;var n=this.$get(t);return angular.isFunction(n)?n(e):angular.isObject(n)&&angular.isFunction(n.$transform)?n.$transform(e):e},$chainTransform:function(t,e){angular.isString(t)&&(t=t.split(/[\s,]+/));for(var n=e,r=0;r<t.length;r++)n=this.$transform(t[r],n);return n},$chainReverseTransform:function(t,e){angular.isString(t)&&(t=t.split(/[\s,]+/));for(var n=e,r=0;r<t.length;r++)n=this.$reverseTransform(t[r],n);return n},$reverseTransform:function(t,e){if(!this.$has(t))return e;var n=this.$get(t);return angular.isFunction(n)?n(e):angular.isObject(n)&&angular.isFunction(n.$reverseTransform)?n.$reverseTransform(e):e}},new e}),angular.module("df.entityManagerBundle").factory("schemaTransformer",function($parse,$injector){function SchemaTransformer(t){this.schema=t}return SchemaTransformer.prototype={$$doTransform:function(object,schema){var dto={},self=this;return schema.__copy&&angular.forEach(schema.__copy,function(t){dto[t]=object[t]}),angular.forEach(schema,function(path,key){var value=null;try{if(angular.isObject(path))value=self.$$doTransform(object,path);else if(value=$parse(path)(object),void 0===value)throw new Error}catch(e){try{value=eval(path)}catch(e){value=void 0}}$parse(key).assign(dto,value)}),delete dto.__copy,delete dto.__prefix,dto},$transform:function(t){var e=angular.copy(this.schema.response||this.schema.to||this.schema);if(e.__prefix&&(t=$parse(e.__prefix)(t)||t),angular.isArray(t)){var n=[];return angular.forEach(t,function(t){n.push(this.$$doTransform(t,e))},this),n}return this.$$doTransform(t,e)},$reverseTransform:function(t){var e=angular.copy(this.schema.request||this.schema.from||this.schema);if(e.__prefix&&(t=$parse(e.__prefix)(t)||t),angular.isArray(t)){var n=[];return angular.forEach(t,function(t){n.push(this.$$doTransform(t,e))},this),n}return this.$$doTransform(t,e)}},SchemaTransformer.$create=function(t){return new SchemaTransformer(t)},SchemaTransformer});